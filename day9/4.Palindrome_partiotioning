T.C : 2^n * n * n

look at the code its same stuff as combination sum its just we are playing with strings in this 
#include <bits/stdc++.h> 
bool palin(string s,int st,int e){
    while(st<e){
        if(s[st++]!=s[e--])
        return 0;
    }
    return 1;
}
void func(int ind,string &s,vector<vector<string>> &ans
      ,vector<string> &dummy){

    if(ind==s.length()){
        ans.push_back(dummy);
        return ;
    }
    for(int i=ind;i<s.length();i++){
        if(palin(s,ind,i)){
            dummy.push_back(s.substr(ind,i-ind+1));
            func(i+1,s,ans,dummy);
            dummy.pop_back();
        }
    }    
}
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<vector<string>> ans;
    vector<string> dummy;
    func(0,s,ans,dummy);
    return ans;
}
