T.C. : o(n! * n)

code : 
bool check(vector<vector<int>> &ds,int row,int col){
    int duprow=row,dubcol=col;

    while(row>=0 && col>=0){
        if(ds[row][col]==1) return false;
        row--,col--;
    }
    row=duprow,col=dubcol;
    while(col>=0){
        if(ds[row][col]==1) return false;
        col--;
    }
    row=duprow,col=dubcol;
    while(row<ds.size()){
        if(ds[row][col]==1) return false;
        row++,col--;
    }
    return true;
}
void func(vector<vector<int>> &ans,vector<vector<int>> ds,int col,int n){
    if(col==n){
        vector<int> arr;
        for(int i=0;i<ds.size();i++){
            for(int j=0;j<ds.size();j++){
                arr.push_back(ds[i][j]);
            }
        }
        ans.push_back(arr);
        return ;
    }
    for(int row=0;row<n;row++){
         if(check(ds,row,col)){
             ds[row][col]=1;
             func(ans,ds,col+1,n);
             ds[row][col]=0;
         }
    }

}
vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    vector<vector<int>> ans;
    vector<vector<int>> ds(n,vector<int> (n,0));
    func(ans,ds,0,n);
    return ans;
}
