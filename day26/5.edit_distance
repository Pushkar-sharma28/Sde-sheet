#include<bits/stdc++.h>

    int ans(string &s1,string &s2,int ind1,int ind2,vector<vector<int>> &dp){
    if(ind1<0) return ind2+1;
    if(ind2<0) return ind1+1;
    if(dp[ind1][ind2]!=-1) return dp[ind1][ind2];
    if(s1[ind1]==s2[ind2]){
        return dp[ind1][ind2]=0+ans(s1,s2,ind1-1,ind2-1,dp);
    }
    else{
        return dp[ind1][ind2]=1+min(ans(s1,s2,ind1-1,ind2-1,dp),
                    min(ans(s1,s2,ind1-1,ind2,dp),ans(s1,s2,ind1,ind2-1,dp)));
    }
    }
int editDistance(string word1, string word2)
{
  int n=word1.size(),m=word2.size();
    vector<vector<int>> dp(n+1,vector<int>(m+1,0));
    for(int i=0;i<=n;i++) dp[i][0]=i;
    for(int j=0;j<=m;j++) dp[0][j]=j;

    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(word1[i-1]==word2[j-1]){
                dp[i][j]=dp[i-1][j-1];
            }
            else{
                dp[i][j]=1+min(dp[i-1][j-1],min(dp[i-1][j],dp[i][j-1]));
            }
        }
    }
    return dp[n][m];   
}
