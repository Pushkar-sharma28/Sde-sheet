
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!

    vector<int> ans;
    if(!root) return ans;
    queue<BinaryTreeNode<int> *> que;
    que.push(root);
    int flag=0;

    while(!que.empty()){
       int siz=que.size();
       vector<int> ds;
       for(int i=0;i<siz;i++){
           BinaryTreeNode<int>* node=que.front();
           que.pop();
           ds.push_back(node->data);
           if(node->left) que.push(node->left);
           if(node->right) que.push(node->right);     
       }

       if(flag==1) reverse(ds.begin(),ds.end());
       for(int i=0;i<siz;i++){
         ans.push_back(ds[i]);  
       }
       flag=!flag;
    }
    return ans;
}

